<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Página de Productos</title>
    <!-- Agrega los enlaces a los estilos de Bootstrap -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>

<div class="container mt-5">
    <h1 class="mb-4">Productos Disponibles</h1>

    <div id="productos-container"></div>

    <!-- Agrega el modal de carrito -->
    <div class="modal fade" id="carritoModal" tabindex="-1" role="dialog" aria-labelledby="carritoModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="carritoModalLabel">Carrito de Compras</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="carrito-container"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Fin del modal de carrito -->

</div>

<!-- Agrega los scripts de Bootstrap y Handlebars -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/handlebars@4.7.7/dist/handlebars.min.js"></script>

<script id="producto-template" type="text/x-handlebars-template">
    <div class="card mb-3">
        <img src="{{imagen}}" class="card-img-top" alt="{{title}}">
        <div class="card-body">
            <h5 class="card-title">{{title}}</h5>
            <p class="card-text">Stock: {{stock}}</p>
            <p class="card-text">Cantidad disponible: {{quantity}}</p>
            <input type="number" class="form-control mb-2" min="0" max="{{quantity}}" value="0" data-producto="{{@index}}">
            <button class="btn btn-primary" onclick="agregarAlCarrito({{@index}})">Agregar al Carrito</button>
        </div>
    </div>
</script>

<script id="carrito-template" type="text/x-handlebars-template">
    <div class="mb-2">
        <p><strong>{{title}}</strong></p>
        <p>Cantidad: {{quantity}}</p>
        <button class="btn btn-danger" onclick="eliminarDelCarrito({{@index}})">Eliminar</button>
    </div>
</script>

<script>
    let productos = [
        { nombre: 'Producto 1', imagen: 'imagen1.jpg', stock: 10, cantidad: 5 },
        { nombre: 'Producto 2', imagen: 'imagen2.jpg', stock: 20, cantidad: 8 },
        // ... otros productos
    ];

    let carrito = [];

    let productoTemplate = Handlebars.compile(document.getElementById('producto-template').innerHTML);
    let carritoTemplate = Handlebars.compile(document.getElementById('carrito-template').innerHTML);

    document.getElementById('productos-container').innerHTML = productos.map(productoTemplate).join('');

    function agregarAlCarrito(index) {
        let cantidadSeleccionada = parseInt(document.querySelector(`input[data-producto="${index}"]`).value, 10);
        if (cantidadSeleccionada > 0) {
            let producto = { ...productos[index], cantidad: cantidadSeleccionada };
            carrito.push(producto);
            actualizarCarrito();
        }
    }

    function eliminarDelCarrito(index) {
        carrito.splice(index, 1);
        actualizarCarrito();
    }

    function actualizarCarrito() {
        let carritoContainer = document.getElementById('carrito-container');
        carritoContainer.innerHTML = carritoTemplate({ carrito });
        // Puedes actualizar otras partes de tu interfaz aquí
    }
</script>

<!-- Agrega el script para manejar la comunicación con el servidor -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
  // Función para cargar los productos desde el servidor
  async function cargarProductos() {
    try {
      const response = await axios.get('/productos');
      const productos = response.data;

      var productosContainer = document.getElementById('productos-container');
      productosContainer.innerHTML = productos.map(productoTemplate).join('');
    } catch (error) {
      console.error('Error al cargar los productos:', error);
    }
  }

  // Llama a la función para cargar los productos al cargar la página
  window.onload = cargarProductos;
</script>



</body>
</html>
